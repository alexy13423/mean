var app=angular.module("mainApp",["ui.router","templates"]);app.config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("home",{url:"/home",templateUrl:"home.html",controller:"MainCtrl",resolve:{usersPromise:["users",function(e){return e.getAll()}]}}).state("orders",{url:"/orders",templateUrl:"orders.html",controller:"MainCtrl"}).state("user",{url:"/user/:id",templateUrl:"users.html",controller:"UserCtrl",resolve:{userPromise:["$stateParams","users",function(e,t){return t.get(e.id)}]}}),t.otherwise("home")}]),app.controller("MainCtrl",["$scope","users","auth","popupService",function(e,t,n,r){e.deleteUser=function(e){console.log("delete",e._id),r.showPopup("Are you sure you want to delete this user?")&&t["delete"](e._id).success(function(e){console.log(e.message),$state.go("home")})},e.isLoggedIn=n.isLoggedIn,e.isAdmin=n.isAdmin,e.users=t.users}]),app.controller("UserCtrl",["$scope","users","auth","userPromise",function(e,t,n,r){e.user=r.data,e.isAdmin=n.isAdmin,e.update=function(){console.log(e.user),t.update(e.user),mixpanel.identify(e.user._id),mixpanel.track("Settings: Update User")}}]),app.controller("NavCtrl",["$scope","auth",function(e,t){e.isAdmin=t.isAdmin,e.isLoggedIn=t.isLoggedIn,e.currentUser=t.currentUser,e.logOut=t.logOut}]),app.factory("posts",["$http","auth",function(e,t){var n={posts:[]};return n.getAll=function(){return e.get("/api/posts").success(function(e){angular.copy(e,n.posts)})},n.create=function(r){return e.post("/api/posts",r,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.posts.push(e)})},n.upvote=function(n){return e.put("/api/posts/"+n._id+"/upvote",null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){n.upvotes+=1})},n.get=function(t){return e.get("/api/posts/"+t).then(function(e){return e.data})},n.addComment=function(n,r){return e.post("/api/posts/"+n+"/comments",r,{headers:{Authorization:"Bearer "+t.getToken()}})},n.upvoteComment=function(n,r){return e.put("/api/posts/"+n._id+"/comments/"+r._id+"/upvote",null,{headers:{Authorization:"Bearer "+t.getToken()}}).success(function(e){r.upvotes+=1})},n}]),app.factory("auth",["$http","$window",function(e,t){var n={};return n.saveToken=function(e){t.localStorage["admin-token"]=e},n.getToken=function(){return t.localStorage["admin-token"]},n.isLoggedIn=function(){var e=n.getToken();if(e){var r=JSON.parse(t.atob(e.split(".")[1]));return r.exp>Date.now()/1e3}return!1},n.currentUser=function(){if(n.isLoggedIn()){var e=n.getToken(),r=JSON.parse(t.atob(e.split(".")[1]));return r.username}},n.isAdmin=function(){var e=n.getToken();if(e){var r=JSON.parse(t.atob(e.split(".")[1]));return"Admin"==r.permissions}return!1},n.logOut=function(){t.localStorage.removeItem("admin-token"),t.location="/"},n}]),app.factory("users",["$http","$window","auth",function(e,t,n){var r={users:[]};return r.getAll=function(){return e.get("/api/users").success(function(e){angular.copy(e,r.users)})},r.get=function(t){return e.get("/api/user/"+t).success(function(e){return console.log(e),e})},r["delete"]=function(t){return e["delete"]("/api/user/"+t,{headers:{Authorization:"Bearer "+n.getToken()}})},r.update=function(t){return console.log("updating user",t),e.put("/api/settings",t).success(function(e){r.users=e})},r}]),app.factory("settings",["$http","$window",function(e,t){var n={settings:{}};return n.getAll=function(){return e.get("/api/settings").success(function(e){angular.copy(e,n.settings)})},n}]),app.service("popupService",["$window",function(e){this.showPopup=function(t){return e.confirm(t)}}]);