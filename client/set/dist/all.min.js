var app=angular.module("mainApp",["ui.router","templates","uiGmapgoogle-maps"]);app.config(["$stateProvider","$urlRouterProvider","uiGmapGoogleMapApiProvider",function(e,r,t){e.state("emailVerify",{url:"/emailverify/:username/:user_token",templateUrl:"emailVerify.html",resolve:{verifyPromise:["$stateParams","verification",function(e,r){return r.emailVerify(e.username,e.user_token)}]},controller:"MainCtrl"}).state("resetPassword",{url:"/resetpassword/:username/:user_token",templateUrl:"resetPassword.html",resolve:{resetPromise:["$stateParams","verification",function(e,r){return r.getUser(e.username,e.user_token)}]},controller:"ResetCtrl"}).state("search",{url:"/search",templateUrl:"search.html",controller:"SearchCtrl",resolve:{searchPromise:["$stateParams","search",function(e,r){return r.get(e.query)}]}}).state("searchResults",{url:"/search/:query",templateUrl:"search.html",controller:"SearchCtrl",resolve:{searchPromise:["$stateParams","search",function(e,r){return r.get(e.query)}]}}).state("mapResults",{url:"/mapResults",templateUrl:"map.html",controller:"MapCtrl"}).state("userProfile",{url:"/user/:handle",templateUrl:"userProfile.html",controller:"UserCtrl",resolve:{userPromise:["$stateParams","users",function(e,r){return r.get(e.handle)}]}})}]),app.controller("MainCtrl",["$scope",function(e){}]),app.controller("ResetCtrl",["$scope","$state","verification",function(e,r,t){e.submitPassword=function(){e.user.username=r.params.username,e.user.user_token=r.params.user_token,t.updatePassword(e.user).success(function(){console.log("Redirecting to user app"),window.location="/"}).error(function(r){e.error=r})}}]),app.controller("SearchCtrl",["$scope","search","searchPromise",function(e,r,t){e.users=t.data,console.log(t),e.submitSearch=function(t){console.log(e.search),r.get(e.search),e.users.push(t)}}]),app.controller("UserCtrl",["$scope","users","$stateParams","userPromise","auth",function(e,r,t,s,o){e.user=s.data,console.log(s),e.followUser=function(){r.addFollower(t.handle)},e.isLoggedIn=o.isLoggedIn,e.isFollowing=o.isFollowing}]),app.factory("verification",["$http","$window",function(e,r){return{getUser:function(r,t){return e.get("/api/resetpassword/"+r+"/"+t).success(function(e){return e})},emailVerify:function(r,t){return e.put("/api/emailverify/"+r+"/"+t).success(function(e){console.log(e.message)})},updatePassword:function(r){return e.put("/api/resetpassword/"+r.username+"/"+r.user_token,r).success(function(e){console.log("Success!")})}}}]),app.factory("users",["$http","$window",function(e,r){var t={users:[]};return t.get=function(r){return e.get("/api/user/handle/"+r).success(function(e){return e})},t.addFollower=function(r,t){return e.post("/api/user/"+r+"/followers",t).success(function(e){return e})},t}]),app.factory("auth",["$http","$window",function(e,r){var t={};return t.saveToken=function(e){r.localStorage["admin-token"]=e},t.getToken=function(){return r.localStorage["admin-token"]},t.isLoggedIn=function(){var e=t.getToken();if(e){var s=JSON.parse(r.atob(e.split(".")[1]));return s.exp>Date.now()/1e3}return!1},t.currentUser=function(){if(t.isLoggedIn()){var e=t.getToken(),s=JSON.parse(r.atob(e.split(".")[1]));return s.username}},t.logOut=function(){r.localStorage.removeItem("admin-token"),r.location="http://localhost:3000"},t.getUser=function(){if(t.isLoggedIn()){var e=t.getToken(),s=JSON.parse(r.atob(e.split(".")[1]));return s}},t}]);